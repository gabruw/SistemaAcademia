package Resource;

import Model.Avaliacao;
import DTO.AvaliacaoDTO;

import javax.persistence.EntityManager;
import javax.persistence.NoResultException;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/avaliacao")
public class AvaliacaoRes {
    @Autowired
    AvaliacaoRes Avaliacao;

    @PersistenceContext
    EntityManager EntityM;
    
    @PostMapping("/search")
    public Avaliacao getAllAvaliacao(@RequestBody AvaliacaoDTO avaliacao) {
        try {
            Query query = EntityM.createQuery("SELECT * FROM Avaliacao");
            
            return (Avaliacao) query.getSingleResult();
        } catch (NoResultException e) {
            return null;
        }
    }
    
    public Aluno getAlunoByAvaliacao(@RequestBody AvaliacaoDTO avaliacao) {
        try {
            Query query = EntityM.createQuery("SELECT u FROM Avaliacao u WHERE u.IdAluno = :idAluno "
                    + "INNER JOIN Aluno k ON k.IdAvaliacao = u.IdAvaliacao "
                    + "WHERE k.IdAvaliacao = u.idAvaliacao");
            query.setParameter("idAluno", avaliacao.getIdAluno());
            query.setParameter("idAvaliacao", avaliacao.getIdAvaliacao());

            return (Aluno) query.getSingleResult();
        } catch (NoResultException e) {
            return null;
        }
    }
    
    public Professor getProfessorByAvaliacao(@RequestBody AvaliacaoDTO avaliacao) {
        try {
            Query query = EntityM.createQuery("SELECT u FROM Avaliacao u WHERE u.IdProfessor = :idProfessor "
                    + "INNER JOIN Professor k ON k.IdAvaliacao = u.IdAvaliacao "
                    + "WHERE k.IdAvaliacao = u.idAvaliacao");
            query.setParameter("idProfessor", avaliacao.getIdProfessor());
            query.setParameter("idAvaliacao", avaliacao.getIdAvaliacao());

            return (Professor) query.getSingleResult();
        } catch (NoResultException e) {
            return null;
        }
    }
}
